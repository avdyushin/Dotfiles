typeset -a ealiases
ealiases=(`alias | sed 's/=.*//'`)

function update_terminal_cwd() {
    local url_path='';
    {
        local i ch hexch LC_CTYPE=C LC_ALL=;
        for ((i = 0; i < ${#PWD}; ++i))
        do
            ch="${PWD:i:1}";
            if [[ "$ch" =~ [/._~A-Za-z0-9-] ]]; then
                url_path+="$ch";
            else
                printf -v hexch "%02X" "'$ch";
                url_path+="%${hexch: -2:2}";
            fi;
        done
    };
    printf '\e]7;%s\a' "file://$HOSTNAME$url_path"
}

function expand-ealias() {
    if [[ $LBUFFER =~ "(^|[;|&])\s*(${(j:|:)ealiases})\$" ]]; then
        zle _expand_alias
        zle expand-word
    fi
    zle magic-space
}

function git-branch() {
    ref=$(git symbolic-ref HEAD 2> /dev/null) || return
    echo ${ref#refs/heads/}
}

function git-create-branch() {
    if [[ $# -eq 2 ]]; then
        git checkout -b "$USER/$1/$2"
    else
        echo "Usage: $0 type name" >&2
    fi
}

function git-file-status() {
    gitstat=$(git status 2>/dev/null | grep '\(Untracked\|Changes\)')
    dirty='＊'
    if [[ $(echo ${gitstat} | grep -c "^Changes to be committed:") > 0 ]]; then
        echo -n "${dirty}"
        return
    fi

    if [[ $(echo ${gitstat} | grep -c "^Changes not staged for commit:") > 0 ]]; then
        echo -n "${dirty}"
        return
    fi

    if [[ $(echo ${gitstat} | grep -c "^Untracked files:") > 0 ]]; then
        echo -n "${dirty}"
        return
    fi

    if [[ $(echo ${gitstat} | wc -l | tr -d ' ') == 0 ]]; then
        echo -n "${dirty}"
        return
    fi
}

function git-upstream-status() {
    count=$(git rev-list --count --left-right "@{upstream}"...HEAD 2>/dev/null)
    behind=$(echo $count | awk '{print $1}')
    ahead=$(echo $count | awk '{print $2}')

    case $count in
        "")                 ;;
        "0	0") echo -n "=" ;;
        *"	0") echo -n "${behind}↓" ;;
        "0	"*) echo -n "${ahead}↑" ;;
        *)      echo -n "~" ;;
    esac
}

function git-prompt() {
    branch="$(git-branch)" || return
    color_branch="%F{240} ${branch}%f"
    echo "${color_branch}%F{240}$(git-file-status)%f %F{236}$(git-upstream-status)%f"
}

function base-prompt() {
    color_user="%F{4}%n%f"
    color_host="%F{3}%m%f"
    color_path="%F{2}%~%f"
    echo "${color_user}  ${color_host} ${color_path}"
}

function last-exit-code() {
    exit_code=$?
    if [[ $exit_code -ne 0 ]]; then
        echo "${exit_code}"
    fi
}

function print-colors() {
    for i in {0..255} ; do
        printf "\x1b[48;5;%sm%3d\e[0m " "$i" "$i"
        if (( i == 15 )) || (( i > 15 )) && (( (i-15) % 6 == 0 )); then
            printf "\n";
        fi
    done
}

function uicolor() {
    if [[ $# -eq 1 ]]; then
        rgb=$1
    else
        rgb=$(pbpaste)
    fi
    color=$(echo $rgb | sed 's/rgb(\([0-9]*\),.\([0-9]*\),.\([0-9]*\))/UIColor(red: \1.0\/255.0, green: \2.0\/255.0, blue: \3.0\/255.0, alpha: 1.0)/')
    echo ${color} | pbcopy
    pbpaste
}
